mas scenario {
		
	agent vehicle1: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle1, vehicleart.team_artifact
		goals: register("connectionA1"), add_initiator
	}
	agent vehicle2: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle2, vehicleart.team_artifact
		goals: register("connectionA2")
	}
	agent vehicle3: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle3, vehicleart.team_artifact
		goals: register("connectionA3")
	}
	agent vehicle4: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle4, vehicleart.team_artifact
		goals: register("connectionA4")
	}
	agent vehicle5: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle5, vehicleart.team_artifact
		goals: register("connectionA5")
	}
	agent vehicle6: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle6, vehicleart.team_artifact
		goals: register("connectionA6")
	}
	agent vehicle7: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle7, vehicleart.team_artifact
		goals: register("connectionA7")
	}
	agent vehicle8: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle8, vehicleart.team_artifact
		goals: register("connectionA8")
	}
	agent vehicle9: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle9, vehicleart.team_artifact
		goals: register("connectionA9")
	}
	agent vehicle10: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle10, vehicleart.team_artifact
		goals: register("connectionA10")
	}
	agent vehicle11: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle11, vehicleart.team_artifact
		goals: register("connectionA11")
	}
	agent vehicle12: vehicle.asl {
		join: vehicleart, org, coalition
		focus: vehicleart.eis_art_vehicle12, vehicleart.team_artifact
		goals: register("connectionA12")
	}
	
	workspace vehicleart {
		artifact eis_art_vehicle1: env.EISArtifact("conf/eisconfig/eismassimconfig1.json")
		artifact eis_art_vehicle2: env.EISArtifact("conf/eisconfig/eismassimconfig2.json")
		artifact eis_art_vehicle3: env.EISArtifact("conf/eisconfig/eismassimconfig3.json")
		artifact eis_art_vehicle4: env.EISArtifact("conf/eisconfig/eismassimconfig4.json")
		artifact eis_art_vehicle5: env.EISArtifact("conf/eisconfig/eismassimconfig5.json")
		artifact eis_art_vehicle6: env.EISArtifact("conf/eisconfig/eismassimconfig6.json")
		artifact eis_art_vehicle7: env.EISArtifact("conf/eisconfig/eismassimconfig7.json")
		artifact eis_art_vehicle8: env.EISArtifact("conf/eisconfig/eismassimconfig8.json")
		artifact eis_art_vehicle9: env.EISArtifact("conf/eisconfig/eismassimconfig9.json")
		artifact eis_art_vehicle10: env.EISArtifact("conf/eisconfig/eismassimconfig10.json")
		artifact eis_art_vehicle11: env.EISArtifact("conf/eisconfig/eismassimconfig11.json")
		artifact eis_art_vehicle12: env.EISArtifact("conf/eisconfig/eismassimconfig12.json")		
		artifact team_artifact: env.TeamArtifact()
	}
	
	workspace coalition {
//		artifact cf: env.CFArtefact(vehicle1,"algorithms.CFSSadapter")
	}
	
	workspace org {
		artifact myorg: ora4mas.nopl.OrgBoard("src/org/sch.xml")
	}

    asl-path: src/agt
              src/agt/inc
	
	platform: cartago("infrastructure")

}